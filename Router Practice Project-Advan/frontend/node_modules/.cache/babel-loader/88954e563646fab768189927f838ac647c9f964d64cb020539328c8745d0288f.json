{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\U.S.A\\\\Desktop\\\\15-data-fetching-example\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = request.formData(); // to get the data from Form\n  const eventData = {\n    title: data.get(\"title\"),\n    //to get specific input data from Form\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save Event\"\n    }, {\n      status: 5000\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","Fragment","_Fragment","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/U.S.A/Desktop/15-data-fetching-example/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n  return (\n    <>\n      <EventForm />\n    </>\n  );\n}\n\nexport default NewEventPage;\n\nexport const action = async ({ request, params }) => {\n  const data = request.formData(); // to get the data from Form\n  const eventData = {\n    title: data.get(\"title\"), //to get specific input data from Form\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n  if (!response.ok) {\n    throw json(\n      {\n        message: \"Could not save Event\",\n      },\n      {\n        status: 5000,\n      }\n    );\n  }\n};\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACtB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACb,CAAC;AAEP;AAACC,EAAA,GANQN,YAAY;AAQrB,eAAeA,YAAY;AAE3B,OAAO,MAAMO,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAAE;IAC1BC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMhC,IAAI,CACR;MACEiC,OAAO,EAAE;IACX,CAAC,EACD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH;AACF,CAAC;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}