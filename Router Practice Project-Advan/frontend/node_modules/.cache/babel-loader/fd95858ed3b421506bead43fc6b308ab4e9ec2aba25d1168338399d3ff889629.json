{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\U.S.A\\\\Desktop\\\\15-data-fetching-example\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\";\nimport { json, useLoaderData, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  const data = useRouteLoaderData;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch the detail of this event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useLoaderData","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","data","console","log","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/U.S.A/Desktop/15-data-fetching-example/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useLoaderData, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetailPage() {\n  const data = useRouteLoaderData;\n  console.log(data);\n\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n}\n\nexport default EventDetailPage;\n\nexport const loader = async ({ request, params }) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch the detail of this event\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n};\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC1E,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EACzB,MAAMC,IAAI,GAAGP,kBAAkB;EAC/BQ,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,SAAS;MAACU,KAAK,EAAEJ,IAAI,CAACI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACC,EAAA,GATQV,eAAe;AAWxB,eAAeA,eAAe;AAE9B,OAAO,MAAMW,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM3B,IAAI,CACR;MAAE4B,OAAO,EAAE;IAA2C,CAAC,EACvD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}